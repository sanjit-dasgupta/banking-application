/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bankingproject;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.CookieHandler;
import java.net.CookieManager;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import javax.swing.SwingWorker;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author Sanjit
 */
public class MainBankJFrame extends javax.swing.JFrame {
    /**
     * Creates new form MainBankJFrame
     */
    User loggedInUser;
    java.awt.Component jTabInMemory[];
    String tabTitles[];
    final String customerTabs[] = {"Manage Account", "Transact", "View Customer Details", "Logout"};
    final String bankerTabs[] = {"Manage Customer Accounts","Add New Customer","View/Edit Customer Details", "Logout"};
    final String managerTabs[] = {"Logout"};
    final String adminTabs[] = {"Logout"};
    JDialog dialog;
    CookieManager cookieManager;
    ArrayList<Branch> branchList;
    public MainBankJFrame() {
        initComponents();        
        cookieManager = new CookieManager();
        CookieHandler.setDefault(cookieManager);
        int count = jMainTabbedPane.getTabCount();
        jTabInMemory = new java.awt.Component[count];
        tabTitles = new String[count];
        for(int i = count - 1; i >= 0; i--){
            jTabInMemory[i] = jMainTabbedPane.getComponentAt(i);
            tabTitles[i] = jMainTabbedPane.getTitleAt(i);
            if(i != 0) jMainTabbedPane.remove(i);
        }
        jMainTabbedPane.setSelectedIndex(0);
        loggedInUser = null;
        branchList = new ArrayList<>();
    }
    private void hideDialog(){
        dialog.dispose();
    }
    private void showDialog() {
        JProgressBar progressBar;
        progressBar = new JProgressBar();
        progressBar.setIndeterminate(true);
        JOptionPane pane = new JOptionPane(progressBar, JOptionPane.INFORMATION_MESSAGE, JOptionPane.DEFAULT_OPTION, null, new Object[]{}, null);
        dialog = pane.createDialog(pane, "Please Wait");
        dialog.setModal(true);
        //dialog.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
        dialog.setAlwaysOnTop(true);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
        /*Timer timer = new Timer(5000, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                hideDialog();
            }
        });
        timer.setRepeats(false);
        timer.start();*/
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTransactionsListScrollPane = new javax.swing.JScrollPane();
        jTransactionsListTable = new javax.swing.JTable();
        jMainPanel = new javax.swing.JPanel();
        jMainTabbedPane = new javax.swing.JTabbedPane();
        jLoginPanel = new javax.swing.JPanel();
        jNameLabel = new javax.swing.JLabel();
        jNameTextField = new javax.swing.JTextField();
        jLoginButton = new javax.swing.JButton();
        jPasswordLabel = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jViewAccountsPanel = new javax.swing.JPanel();
        jAccountsListScrollPane1 = new javax.swing.JScrollPane();
        jAccountsListTable = new javax.swing.JTable();
        jSeparator = new javax.swing.JSeparator();
        jRefreshAccountListButton = new javax.swing.JButton();
        jViewTransactionHistoryButton = new javax.swing.JButton();
        jPerformTransactionButton = new javax.swing.JButton();
        jCustomerDetailsButton = new javax.swing.JButton();
        jTransactPanel = new javax.swing.JPanel();
        jDepositButton = new javax.swing.JButton();
        jWithdrawButton = new javax.swing.JButton();
        jTransferButton = new javax.swing.JButton();
        jCustomerDetailsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCustomerNameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jCustomerDOBTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jCustomerPhoneTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jCustomerEmailTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jBankerNameTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jBankerPhoneTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jBankerEmailTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jRegisteredAddressTextArea = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jBranchDetailsTextArea = new javax.swing.JTextArea();
        jAddNewCustomerPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jFirstNameTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jDOBTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPhoneTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jEmailTextField = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jCustomerAddressLine1TextField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jCustomerAddressLine2TextField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jCustomerCityTextField = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jCustomerStateTextField = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jPinCodeTextField = new javax.swing.JTextField();
        jlastNameTextField = new javax.swing.JTextField();
        jSubmitNewCustomerFormButton = new javax.swing.JButton();
        jNewPasswordField = new javax.swing.JPasswordField();
        jBranchListComboBox = new javax.swing.JComboBox<>();
        jCustomerUserNameTextField = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jBankerViewAccountsPanel = new javax.swing.JPanel();
        jAccountsListScrollPane2 = new javax.swing.JScrollPane();
        jBankerAccountsListTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jRefreshUserAccountListButton = new javax.swing.JButton();
        jAddNewAccountButton = new javax.swing.JButton();
        jViewUserTransactionButton = new javax.swing.JButton();
        jChangeSelectedUserButton = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jSelectedUserLabel = new javax.swing.JLabel();
        jViewEditCustomerPanel = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jFirstNameTextField1 = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jDOBTextField1 = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jPhoneTextField1 = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jEmailTextField1 = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jCustomerAddressLine1TextField1 = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jCustomerAddressLine2TextField1 = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jCustomerCityTextField1 = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        jCustomerStateTextField1 = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jPinCodeTextField1 = new javax.swing.JTextField();
        jlastNameTextField1 = new javax.swing.JTextField();
        jFetchUserFormButton = new javax.swing.JButton();
        jCustomerUserNameTextField1 = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        jSubmitNewCustomerFormButton2 = new javax.swing.JButton();
        jLogoutPanel = new javax.swing.JPanel();

        jTransactionsListScrollPane.setPreferredSize(new java.awt.Dimension(450, 402));
        jTransactionsListScrollPane.setRequestFocusEnabled(false);

        jTransactionsListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Transaction ID", "Transaction Amount", "Transaction Type", "Time", "Balance", "ref"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTransactionsListTable.setGridColor(new java.awt.Color(240, 240, 240));
        jTransactionsListTable.getTableHeader().setReorderingAllowed(false);
        jTransactionsListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTransactionsListTableMouseClicked(evt);
            }
        });
        jTransactionsListTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTransactionsListTableKeyPressed(evt);
            }
        });
        jTransactionsListScrollPane.setViewportView(jTransactionsListTable);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setName("Banking Application"); // NOI18N

        jMainTabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        jMainTabbedPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMainTabbedPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jMainTabbedPane.setToolTipText("");
        jMainTabbedPane.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jMainTabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jMainTabbedPaneStateChanged(evt);
            }
        });
        jMainTabbedPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jMainTabbedPaneFocusGained(evt);
            }
        });

        jLoginPanel.setBackground(new java.awt.Color(204, 204, 255));
        jLoginPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLoginPanel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jNameLabel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jNameLabel.setText("User Name:");

        jNameTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLoginButton.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLoginButton.setText("Login");
        jLoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLoginButtonActionPerformed(evt);
            }
        });

        jPasswordLabel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jPasswordLabel.setText("Password:");

        jPasswordField1.setMinimumSize(new java.awt.Dimension(6, 15));

        javax.swing.GroupLayout jLoginPanelLayout = new javax.swing.GroupLayout(jLoginPanel);
        jLoginPanel.setLayout(jLoginPanelLayout);
        jLoginPanelLayout.setHorizontalGroup(
            jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLoginPanelLayout.createSequentialGroup()
                .addGroup(jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLoginPanelLayout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addGroup(jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordLabel)
                            .addComponent(jNameLabel))
                        .addGap(61, 61, 61)
                        .addGroup(jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jLoginPanelLayout.createSequentialGroup()
                        .addGap(393, 393, 393)
                        .addComponent(jLoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(517, Short.MAX_VALUE))
        );
        jLoginPanelLayout.setVerticalGroup(
            jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLoginPanelLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNameLabel))
                .addGap(32, 32, 32)
                .addGroup(jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordLabel))
                .addGap(58, 58, 58)
                .addComponent(jLoginButton)
                .addContainerGap(192, Short.MAX_VALUE))
        );

        jMainTabbedPane.addTab("Login", jLoginPanel);

        jViewAccountsPanel.setBackground(new java.awt.Color(204, 204, 255));
        jViewAccountsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jViewAccountsPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jViewAccountsPanel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jAccountsListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account Number", "Account Type", "Balance", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jAccountsListTable.setGridColor(new java.awt.Color(240, 240, 240));
        jAccountsListTable.getTableHeader().setReorderingAllowed(false);
        jAccountsListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jAccountsListTableMouseClicked(evt);
            }
        });
        jAccountsListTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jAccountsListTableKeyPressed(evt);
            }
        });
        jAccountsListScrollPane1.setViewportView(jAccountsListTable);

        jRefreshAccountListButton.setText("Refresh List");
        jRefreshAccountListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRefreshAccountListButtonActionPerformed(evt);
            }
        });

        jViewTransactionHistoryButton.setText("View Transaction History");
        jViewTransactionHistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jViewTransactionHistoryButtonActionPerformed(evt);
            }
        });

        jPerformTransactionButton.setText("Perform Transaction");
        jPerformTransactionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPerformTransactionButtonActionPerformed(evt);
            }
        });

        jCustomerDetailsButton.setText("View Customer Details");
        jCustomerDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCustomerDetailsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jViewAccountsPanelLayout = new javax.swing.GroupLayout(jViewAccountsPanel);
        jViewAccountsPanel.setLayout(jViewAccountsPanelLayout);
        jViewAccountsPanelLayout.setHorizontalGroup(
            jViewAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jViewAccountsPanelLayout.createSequentialGroup()
                .addGroup(jViewAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jViewAccountsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jAccountsListScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jViewAccountsPanelLayout.createSequentialGroup()
                        .addContainerGap(104, Short.MAX_VALUE)
                        .addComponent(jRefreshAccountListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addGroup(jViewAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jViewAccountsPanelLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jViewTransactionHistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91)
                                .addComponent(jPerformTransactionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(112, 112, 112)
                                .addComponent(jCustomerDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(105, 105, 105)))
                .addContainerGap())
        );
        jViewAccountsPanelLayout.setVerticalGroup(
            jViewAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jViewAccountsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jAccountsListScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jViewAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRefreshAccountListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jViewTransactionHistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPerformTransactionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCustomerDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );

        jMainTabbedPane.addTab("Manage Account", jViewAccountsPanel);

        jTransactPanel.setBackground(new java.awt.Color(204, 204, 255));
        jTransactPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTransactPanel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jDepositButton.setText("Deposit Cheque");
        jDepositButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jDepositButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDepositButtonActionPerformed(evt);
            }
        });

        jWithdrawButton.setText("Withdraw Money");
        jWithdrawButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jWithdrawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWithdrawButtonActionPerformed(evt);
            }
        });

        jTransferButton.setText("Transfer Money");
        jTransferButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTransferButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTransferButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jTransactPanelLayout = new javax.swing.GroupLayout(jTransactPanel);
        jTransactPanel.setLayout(jTransactPanelLayout);
        jTransactPanelLayout.setHorizontalGroup(
            jTransactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTransactPanelLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jDepositButton, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108)
                .addComponent(jWithdrawButton, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123)
                .addComponent(jTransferButton, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(136, Short.MAX_VALUE))
        );
        jTransactPanelLayout.setVerticalGroup(
            jTransactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTransactPanelLayout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(jTransactPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTransferButton, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jWithdrawButton, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDepositButton, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(125, Short.MAX_VALUE))
        );

        jMainTabbedPane.addTab("Transact", jTransactPanel);

        jCustomerDetailsPanel.setBackground(new java.awt.Color(204, 204, 255));
        jCustomerDetailsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jCustomerDetailsPanel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setLabelFor(jCustomerNameTextField);
        jLabel1.setText("Name :");

        jCustomerNameTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jCustomerNameTextField.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setLabelFor(jCustomerNameTextField);
        jLabel2.setText("Date of Birth :");

        jCustomerDOBTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jCustomerDOBTextField.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setLabelFor(jCustomerNameTextField);
        jLabel3.setText("Phone Number :");

        jCustomerPhoneTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jCustomerPhoneTextField.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setLabelFor(jCustomerNameTextField);
        jLabel4.setText("Email Address :");

        jCustomerEmailTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jCustomerEmailTextField.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setLabelFor(jCustomerNameTextField);
        jLabel6.setText("Name :");

        jBankerNameTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jBankerNameTextField.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setLabelFor(jCustomerNameTextField);
        jLabel7.setText("Phone Number :");

        jBankerPhoneTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jBankerPhoneTextField.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setLabelFor(jCustomerNameTextField);
        jLabel8.setText("Email Address :");

        jBankerEmailTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jBankerEmailTextField.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setLabelFor(jCustomerNameTextField);
        jLabel9.setText("Registered Address :");

        jLabel10.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setLabelFor(jCustomerNameTextField);
        jLabel10.setText(" Personal Banker Details :");

        jRegisteredAddressTextArea.setColumns(20);
        jRegisteredAddressTextArea.setLineWrap(true);
        jRegisteredAddressTextArea.setRows(3);
        jRegisteredAddressTextArea.setEnabled(false);
        jScrollPane1.setViewportView(jRegisteredAddressTextArea);

        jLabel11.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setLabelFor(jCustomerNameTextField);
        jLabel11.setText("Branch Details :");

        jBranchDetailsTextArea.setColumns(20);
        jBranchDetailsTextArea.setLineWrap(true);
        jBranchDetailsTextArea.setRows(3);
        jBranchDetailsTextArea.setEnabled(false);
        jScrollPane2.setViewportView(jBranchDetailsTextArea);

        javax.swing.GroupLayout jCustomerDetailsPanelLayout = new javax.swing.GroupLayout(jCustomerDetailsPanel);
        jCustomerDetailsPanel.setLayout(jCustomerDetailsPanelLayout);
        jCustomerDetailsPanelLayout.setHorizontalGroup(
            jCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jCustomerDetailsPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCustomerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(250, 250, 250)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCustomerDOBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jCustomerDetailsPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCustomerPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(250, 250, 250)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCustomerEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jCustomerDetailsPanelLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(168, 168, 168)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jCustomerDetailsPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jCustomerDetailsPanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBankerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBankerPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBankerEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(105, 105, 105)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jCustomerDetailsPanelLayout.setVerticalGroup(
            jCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jCustomerDetailsPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCustomerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCustomerDOBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jCustomerDetailsPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCustomerPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCustomerEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jCustomerDetailsPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(73, 73, 73)
                .addGroup(jCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jCustomerDetailsPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jCustomerDetailsPanelLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jBankerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jBankerPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jBankerEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jMainTabbedPane.addTab("View Customer Details", jCustomerDetailsPanel);

        jAddNewCustomerPanel.setBackground(new java.awt.Color(204, 204, 255));
        jAddNewCustomerPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jAddNewCustomerPanel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setLabelFor(jCustomerNameTextField);
        jLabel5.setText("First Name :");

        jFirstNameTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setLabelFor(jCustomerNameTextField);
        jLabel12.setText("Date of Birth :");

        jDOBTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setLabelFor(jCustomerNameTextField);
        jLabel13.setText("Phone Number :");

        jPhoneTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setLabelFor(jCustomerNameTextField);
        jLabel14.setText("Email Address :");

        jEmailTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel33.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setLabelFor(jCustomerNameTextField);
        jLabel33.setText("Last Name :");

        jLabel15.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setLabelFor(jCustomerNameTextField);
        jLabel15.setText("Password :");

        jLabel16.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setLabelFor(jCustomerNameTextField);
        jLabel16.setText("Branch :");

        jLabel18.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setLabelFor(jCustomerNameTextField);
        jLabel18.setText("Address Line 1 :");

        jCustomerAddressLine1TextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jCustomerAddressLine1TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCustomerAddressLine1TextFieldActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setLabelFor(jCustomerNameTextField);
        jLabel19.setText("Address Line 2 :");

        jCustomerAddressLine2TextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel20.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setLabelFor(jCustomerNameTextField);
        jLabel20.setText("City :");

        jCustomerCityTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel34.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setLabelFor(jCustomerNameTextField);
        jLabel34.setText("State :");

        jCustomerStateTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel35.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setLabelFor(jCustomerNameTextField);
        jLabel35.setText("Pin Code :");

        jPinCodeTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jlastNameTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jSubmitNewCustomerFormButton.setText("Submit");
        jSubmitNewCustomerFormButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSubmitNewCustomerFormButtonActionPerformed(evt);
            }
        });

        jBranchListComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jBranchListComboBox.setBorder(null);

        jCustomerUserNameTextField.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel32.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setLabelFor(jCustomerNameTextField);
        jLabel32.setText("User Name :");

        javax.swing.GroupLayout jAddNewCustomerPanelLayout = new javax.swing.GroupLayout(jAddNewCustomerPanel);
        jAddNewCustomerPanel.setLayout(jAddNewCustomerPanelLayout);
        jAddNewCustomerPanelLayout.setHorizontalGroup(
            jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(261, 261, 261)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jCustomerAddressLine1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                                .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCustomerAddressLine2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(250, 250, 250)
                                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jAddNewCustomerPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBranchListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPinCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                        .addGap(487, 487, 487)
                        .addComponent(jSubmitNewCustomerFormButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jAddNewCustomerPanelLayout.createSequentialGroup()
                                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jCustomerUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(261, 261, 261)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jNewPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(250, 250, 250)
                                .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)))
                        .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jCustomerCityTextField)
                            .addComponent(jDOBTextField)
                            .addComponent(jCustomerStateTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(128, 128, 128))
        );
        jAddNewCustomerPanelLayout.setVerticalGroup(
            jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                        .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jAddNewCustomerPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDOBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCustomerUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jNewPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCustomerCityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCustomerAddressLine1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCustomerStateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCustomerAddressLine2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBranchListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jAddNewCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jAddNewCustomerPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPinCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jSubmitNewCustomerFormButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jMainTabbedPane.addTab("Add New Customer", jAddNewCustomerPanel);

        jBankerViewAccountsPanel.setBackground(new java.awt.Color(204, 204, 255));
        jBankerViewAccountsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jBankerViewAccountsPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBankerViewAccountsPanel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jBankerAccountsListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account Number", "Account Type", "Balance", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jBankerAccountsListTable.setGridColor(new java.awt.Color(240, 240, 240));
        jBankerAccountsListTable.getTableHeader().setReorderingAllowed(false);
        jBankerAccountsListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBankerAccountsListTableMouseClicked(evt);
            }
        });
        jBankerAccountsListTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBankerAccountsListTableKeyPressed(evt);
            }
        });
        jAccountsListScrollPane2.setViewportView(jBankerAccountsListTable);

        jRefreshUserAccountListButton.setText("Refresh List");
        jRefreshUserAccountListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRefreshUserAccountListButtonActionPerformed(evt);
            }
        });

        jAddNewAccountButton.setText("Add New Account");
        jAddNewAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddNewAccountButtonActionPerformed(evt);
            }
        });

        jViewUserTransactionButton.setText("View Transaction History");
        jViewUserTransactionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jViewUserTransactionButtonActionPerformed(evt);
            }
        });

        jChangeSelectedUserButton.setText("Change User");
        jChangeSelectedUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChangeSelectedUserButtonActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel21.setText("Selected User :");

        jSelectedUserLabel.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jSelectedUserLabel.setText("None");

        javax.swing.GroupLayout jBankerViewAccountsPanelLayout = new javax.swing.GroupLayout(jBankerViewAccountsPanel);
        jBankerViewAccountsPanel.setLayout(jBankerViewAccountsPanelLayout);
        jBankerViewAccountsPanelLayout.setHorizontalGroup(
            jBankerViewAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBankerViewAccountsPanelLayout.createSequentialGroup()
                .addGroup(jBankerViewAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jBankerViewAccountsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jAccountsListScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBankerViewAccountsPanelLayout.createSequentialGroup()
                        .addContainerGap(104, Short.MAX_VALUE)
                        .addComponent(jRefreshUserAccountListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(jAddNewAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(jViewUserTransactionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92)
                        .addComponent(jChangeSelectedUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBankerViewAccountsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(264, 264, 264))
            .addGroup(jBankerViewAccountsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSelectedUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jBankerViewAccountsPanelLayout.setVerticalGroup(
            jBankerViewAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBankerViewAccountsPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jBankerViewAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jSelectedUserLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jAccountsListScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(jBankerViewAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRefreshUserAccountListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAddNewAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jViewUserTransactionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jChangeSelectedUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );

        jMainTabbedPane.addTab("Manage Customer Accounts", jBankerViewAccountsPanel);

        jViewEditCustomerPanel.setBackground(new java.awt.Color(204, 204, 255));
        jViewEditCustomerPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jViewEditCustomerPanel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel36.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setLabelFor(jCustomerNameTextField);
        jLabel36.setText("First Name :");

        jFirstNameTextField1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel37.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setLabelFor(jCustomerNameTextField);
        jLabel37.setText("Date of Birth :");

        jDOBTextField1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel38.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setLabelFor(jCustomerNameTextField);
        jLabel38.setText("Phone Number :");

        jPhoneTextField1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel39.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setLabelFor(jCustomerNameTextField);
        jLabel39.setText("Email Address :");

        jEmailTextField1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel40.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setLabelFor(jCustomerNameTextField);
        jLabel40.setText("Last Name :");

        jLabel43.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setLabelFor(jCustomerNameTextField);
        jLabel43.setText("Address Line 1 :");

        jCustomerAddressLine1TextField1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel44.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setLabelFor(jCustomerNameTextField);
        jLabel44.setText("Address Line 2 :");

        jCustomerAddressLine2TextField1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel45.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel45.setLabelFor(jCustomerNameTextField);
        jLabel45.setText("City :");

        jCustomerCityTextField1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel46.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel46.setLabelFor(jCustomerNameTextField);
        jLabel46.setText("State :");

        jCustomerStateTextField1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel47.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setLabelFor(jCustomerNameTextField);
        jLabel47.setText("Pin Code :");

        jPinCodeTextField1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jlastNameTextField1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jFetchUserFormButton.setText("Fetch User");
        jFetchUserFormButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFetchUserFormButtonActionPerformed(evt);
            }
        });

        jCustomerUserNameTextField1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jCustomerUserNameTextField1.setEnabled(false);

        jLabel48.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setLabelFor(jCustomerNameTextField);
        jLabel48.setText("User Name :");

        jSubmitNewCustomerFormButton2.setText("Submit");
        jSubmitNewCustomerFormButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSubmitNewCustomerFormButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jViewEditCustomerPanelLayout = new javax.swing.GroupLayout(jViewEditCustomerPanel);
        jViewEditCustomerPanel.setLayout(jViewEditCustomerPanelLayout);
        jViewEditCustomerPanelLayout.setHorizontalGroup(
            jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPinCodeTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(765, 765, 765))
                    .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                        .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jFirstNameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jlastNameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                                .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCustomerAddressLine1TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCustomerUserNameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jPhoneTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jEmailTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jViewEditCustomerPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jDOBTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCustomerCityTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                                .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jCustomerAddressLine2TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jCustomerStateTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(139, 139, 139))))
            .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                .addGap(418, 418, 418)
                .addComponent(jSubmitNewCustomerFormButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jFetchUserFormButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jViewEditCustomerPanelLayout.setVerticalGroup(
            jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFirstNameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jViewEditCustomerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlastNameTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                        .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPhoneTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jEmailTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCustomerUserNameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jDOBTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                            .addComponent(jCustomerAddressLine1TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jViewEditCustomerPanelLayout.createSequentialGroup()
                            .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                    .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                        .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCustomerCityTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCustomerStateTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel44, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCustomerAddressLine2TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPinCodeTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jViewEditCustomerPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jViewEditCustomerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSubmitNewCustomerFormButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFetchUserFormButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(102, 102, 102))
        );

        jMainTabbedPane.addTab("View/Edit Customer Details", jViewEditCustomerPanel);

        javax.swing.GroupLayout jLogoutPanelLayout = new javax.swing.GroupLayout(jLogoutPanel);
        jLogoutPanel.setLayout(jLogoutPanelLayout);
        jLogoutPanelLayout.setHorizontalGroup(
            jLogoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1161, Short.MAX_VALUE)
        );
        jLogoutPanelLayout.setVerticalGroup(
            jLogoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 434, Short.MAX_VALUE)
        );

        jMainTabbedPane.addTab("Logout", jLogoutPanel);

        javax.swing.GroupLayout jMainPanelLayout = new javax.swing.GroupLayout(jMainPanel);
        jMainPanel.setLayout(jMainPanelLayout);
        jMainPanelLayout.setHorizontalGroup(
            jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jMainTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jMainPanelLayout.setVerticalGroup(
            jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jMainTabbedPane)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1168, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 487, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLoginButtonActionPerformed
        SendRequest sw = new SendRequest("user/login.php", "username=" + jNameTextField.getText() + "&password=" + jPasswordField1.getText());
        sw.addPropertyChangeListener((PropertyChangeEvent ev) -> {
            if ("state".equals(ev.getPropertyName())
                    && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                hideDialog();
                try {
                    loggedInUser = null;
                    Object json = new JSONParser().parse(sw.get());
                    JSONObject jo = (JSONObject) json;
                    long status = (Long) jo.get("status");
                    if (status != (long) (200)) {
                        JOptionPane.showMessageDialog(this, (String) jo.get("message"));
                    } else {
                        String role = (String) jo.get("role");
                        Map userDetails = (Map) jo.get("user_details");
                        switch (role) {
                            case "Admin":
                                loggedInUser = new User(userDetails, role);
                                break;
                            case "Branch Manager":
                                loggedInUser = new User(userDetails, role);
                                break;
                            case "Personal Banker":
                                loggedInUser = new User(userDetails, role);
                                break;
                            default:
                                loggedInUser = new Customer(userDetails);
                                break;
                        }
                    }
                    if (loggedInUser != null) {
                        jMainTabbedPane.remove(0);
                        String role = loggedInUser.getRole();
                        String[] tabs;
                        switch (role) {
                            case "Admin":
                                tabs = adminTabs;
                                break;
                            case "Branch Manager":
                                tabs = managerTabs;
                                break;
                            case "Personal Banker":
                                tabs = bankerTabs;
                                fetchBranchList();
                                break;
                            default:
                                tabs = customerTabs;
                                loadCustomerDetails();
                                fetchAccountsList();
                                break;
                        }
                        for (int i = 0; i < jTabInMemory.length; i++) {
                            String tab = tabTitles[i];
                            for (int j = 0; j < tabs.length; j++) {
                                if (tabs[j].equals(tab)) {
                                    jMainTabbedPane.addTab(tab, jTabInMemory[i]);
                                }
                            }
                        }
                    }
                } catch (ParseException | InterruptedException | ExecutionException ex) {
                    Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    displayErrorPopup(0, "Unable to contact server");
                }
            }
        });
        sw.execute();
        showDialog();
    }//GEN-LAST:event_jLoginButtonActionPerformed

    private void jAccountsListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAccountsListTableMouseClicked
        
    }//GEN-LAST:event_jAccountsListTableMouseClicked

    private void jAccountsListTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAccountsListTableKeyPressed
        
    }//GEN-LAST:event_jAccountsListTableKeyPressed

    private void jMainTabbedPaneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jMainTabbedPaneFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jMainTabbedPaneFocusGained

    private void jMainTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jMainTabbedPaneStateChanged
        JTabbedPane tabSource = (JTabbedPane) evt.getSource();
        if(tabSource.getSelectedIndex() == -1) return;
        String tab = tabSource.getTitleAt(tabSource.getSelectedIndex());
        if (tab.equals("Logout")) {
            logout();
        }
    }//GEN-LAST:event_jMainTabbedPaneStateChanged

    private void loadCustomerDetails() {
        jCustomerNameTextField.setText(loggedInUser.getName());
        jCustomerDOBTextField.setText(loggedInUser.getDOB());
        jCustomerPhoneTextField.setText(loggedInUser.getPhone());
        jCustomerEmailTextField.setText(loggedInUser.getEmail());
        SendRequest sw = new SendRequest("customer/getAddress.php", "username=" + loggedInUser.getUserName());
        SendRequest sw2 = new SendRequest("customer/getBanker.php", "username=" + loggedInUser.getUserName());
        SendRequest sw3 = new SendRequest("user/getBranchDetails.php", "branchID=" + loggedInUser.getBranchID());
        sw.addPropertyChangeListener((PropertyChangeEvent ev) -> {
            if ("state".equals(ev.getPropertyName())
                    && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                hideDialog();
                try {
                    Object json = new JSONParser().parse(sw.get());
                    JSONObject jo = (JSONObject) json;
                    long status = (Long) jo.get("status");
                    if (status != (long) 200) {
                        displayErrorPopup(status, (String) jo.get("message"));
                    } else {
                        loggedInUser.setUserAddress((Map) jo.get("details"));
                        jRegisteredAddressTextArea.setText(loggedInUser.getUserAddress());
                    }
                } catch (ParseException | InterruptedException | ExecutionException ex) {
                    Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    displayErrorPopup(0, "Unable to contact server");
                }
            }
        });
        sw2.addPropertyChangeListener((PropertyChangeEvent ev) -> {
            if ("state".equals(ev.getPropertyName())
                    && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                hideDialog();
                try {
                    Object json = new JSONParser().parse(sw2.get());
                    JSONObject jo = (JSONObject) json;
                    long status = (Long) jo.get("status");
                    if (status != (long) 200) {
                        displayErrorPopup(status, (String) jo.get("message"));
                    } else {
                        Customer cust = ((Customer) loggedInUser);
                        cust.setBankerDetails((Map) jo.get("details"));
                        jBankerNameTextField.setText(cust.getBankerName());
                        jBankerPhoneTextField.setText(cust.getBankerPhone());
                        jBankerEmailTextField.setText(cust.getBankerEmail());
                    }
                } catch (ParseException | InterruptedException | ExecutionException ex) {
                    Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    displayErrorPopup(0, "Unable to contact server");
                }
            }
        });
        sw3.addPropertyChangeListener((PropertyChangeEvent ev) -> {
            if ("state".equals(ev.getPropertyName())
                    && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                hideDialog();
                try {
                    Object json = new JSONParser().parse(sw3.get());
                    JSONObject jo = (JSONObject) json;
                    long status = (Long) jo.get("status");
                    if (status != (long) 200) {
                        displayErrorPopup(status, (String) jo.get("message"));
                    } else {
                        Customer cust = ((Customer) loggedInUser);
                        cust.setBranchDetails((Map) jo.get("details"));
                        jBranchDetailsTextArea.setText("Branch ID : " + loggedInUser.getBranchID() + "\r\nBranch Name : " + loggedInUser.getBranchName() + "\r\n" + loggedInUser.getBranchAddress());
                    }
                } catch (ParseException | InterruptedException | ExecutionException ex) {
                    Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    displayErrorPopup(0, "Unable to contact server");
                }
            }
        });
        sw.execute();
        sw2.execute();
        sw3.execute();
        showDialog();
    }
    private void fetchAccountsList() {
        SendRequest sw = new SendRequest("customer/getAccountsList.php", "username=" + loggedInUser.getUserName());
        sw.addPropertyChangeListener((PropertyChangeEvent evt) -> {
            if ("state".equals(evt.getPropertyName())
                    && (SwingWorker.StateValue.DONE.equals(evt.getNewValue()))) {
                hideDialog();
                try {
                    Object json = new JSONParser().parse(sw.get());
                    JSONObject jo = (JSONObject) json;
                    long status = (Long) jo.get("status");
                    if (status != (long) 200) {
                        displayErrorPopup(status, (String) jo.get("message"));
                    } else {
                        ((Customer) loggedInUser).updateAccountsList((JSONArray) jo.get("result"));
                        ((Customer) loggedInUser).displayAccounts(jAccountsListTable);
                    }
                } catch (ParseException | InterruptedException | ExecutionException ex) {
                    Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    displayErrorPopup(0, "Unable to contact server");
                }
            }
        });
        sw.execute();
        showDialog();
    }
    private void displayErrorPopup(long status, String message){
            JOptionPane.showMessageDialog(this, message);
            if(status == (long)401) logout();
    }
    private void logout() {
        SendRequest sw = null;
        if (loggedInUser != null) {
            sw = new SendRequest("user/logout.php", "username=" + loggedInUser.getUserName());
            sw.addPropertyChangeListener((PropertyChangeEvent evt) -> {
                if ("state".equals(evt.getPropertyName())
                        && (SwingWorker.StateValue.DONE.equals(evt.getNewValue()))) {
                    hideDialog();
                }
            });
        }
        while (jMainTabbedPane.getTabCount() > 0) {
            jMainTabbedPane.remove(0);
        }
        jMainTabbedPane.addTab("Login", jTabInMemory[0]);
        resetTextFields();
        if(sw != null) sw.execute();
        showDialog();
    }
    public void resetTextFields() {
        for (Component c : jAddNewCustomerPanel.getComponents()) {
            if (c.getClass().toString().contains("javax.swing.JTextField")) {
                ((JTextField)c).setText("");
            }
        }
        for (Component c : jViewEditCustomerPanel.getComponents()) {
            if (c.getClass().toString().contains("javax.swing.JTextField")) {
                ((JTextField)c).setText("");
            }
        }
        jPasswordField1.setText("");
    }
    private void jDepositButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDepositButtonActionPerformed
        double amount;
        JTextField DepositAmount = new JTextField();
        JTextField ChequeNumber = new JTextField();
        JComboBox accountNumber = new JComboBox(((Customer) loggedInUser).getAccountsList());
        Object[] message = {
            "Account Number : ", accountNumber,
            "Deposit Amount :", DepositAmount,
            "Cheque Number :", ChequeNumber
        };
        int option = JOptionPane.showConfirmDialog(null, message, "Enter Additional Information", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            try {
                amount = Double.parseDouble(DepositAmount.getText());
            } catch (NumberFormatException e) {
                displayErrorPopup(200, "Invalid Amount !");
                return;
            }
        } else {
            return;
        }
        SendRequest sw = new SendRequest("customer/transact.php", "username=" + loggedInUser.getUserName()
                + "&transaction_type=Deposit"
                + "&account_number=" + (String) accountNumber.getSelectedItem()
                + "&transaction_amt=" + DepositAmount.getText()
                + "&ref=" + ChequeNumber.getText());
        sw.addPropertyChangeListener((PropertyChangeEvent ev) -> {
            if ("state".equals(ev.getPropertyName())
                    && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                hideDialog();
                try {
                    Object json = new JSONParser().parse(sw.get());
                    JSONObject jo = (JSONObject) json;
                    long status = (Long) jo.get("status");
                    displayErrorPopup(status, (String) jo.get("message"));
                    fetchAccountsList();
                } catch (ParseException | InterruptedException | ExecutionException ex) {
                    Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    displayErrorPopup(0, "Unable to contact server");
                }
            }
        });
        sw.execute();
        showDialog();
    }//GEN-LAST:event_jDepositButtonActionPerformed

    private void jRefreshAccountListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRefreshAccountListButtonActionPerformed
        fetchAccountsList();
    }//GEN-LAST:event_jRefreshAccountListButtonActionPerformed

    private void jCustomerDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCustomerDetailsButtonActionPerformed
        String target = "View Customer Details";
        int index = 0;
        for(String str:customerTabs){
            if(str.equals(target)) break;
            index++;
        }
        jMainTabbedPane.setSelectedIndex(index);
    }//GEN-LAST:event_jCustomerDetailsButtonActionPerformed

    private void jPerformTransactionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPerformTransactionButtonActionPerformed
        String target = "Transact";
        int index = 0;
        for(String str:customerTabs){
            if(str.equals(target)) break;
            index++;
        }
        jMainTabbedPane.setSelectedIndex(index);
    }//GEN-LAST:event_jPerformTransactionButtonActionPerformed

    private void jWithdrawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWithdrawButtonActionPerformed
        double amount;
        JTextField WithdrawalAmount = new JTextField();
        JComboBox accountNumber = new JComboBox(((Customer) loggedInUser).getAccountsList());
        Object[] message = {
            "Account Number : ", accountNumber,
            "Withdrawal Amount :", WithdrawalAmount
        };
        int option = JOptionPane.showConfirmDialog(null, message, "Enter Additional Information", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            try {
                amount = Double.parseDouble(WithdrawalAmount.getText());
            } catch (NumberFormatException e) {
                displayErrorPopup(200, "Invalid Amount !");
                return;
            }
        } else {
            return;
        }
        SendRequest sw = new SendRequest("customer/transact.php", "username=" + loggedInUser.getUserName()
                + "&transaction_type=Withdrawal"
                + "&account_number=" + (String) accountNumber.getSelectedItem()
                + "&transaction_amt=" + WithdrawalAmount.getText()
                + "&ref=-");
        sw.addPropertyChangeListener((PropertyChangeEvent ev) -> {
            if ("state".equals(ev.getPropertyName())
                    && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                hideDialog();
                try {
                    Object json = new JSONParser().parse(sw.get());
                    JSONObject jo = (JSONObject) json;
                    long status = (Long) jo.get("status");
                    if (status == 200) {
                        JTextField OTP = new JTextField();
                        Object[] message2 = {
                            "Enter OTP : ", OTP
                        };
                        int option1 = JOptionPane.showConfirmDialog(null, message2, "Enter Additional Information", JOptionPane.OK_CANCEL_OPTION);
                        if (option1 == JOptionPane.OK_OPTION) {
                            SendRequest sw2 = new SendRequest("customer/transactOTP.php", "username=" + loggedInUser.getUserName()
                                    + "&account_number=" + (String) accountNumber.getSelectedItem()
                                    + "&otp=" + OTP.getText()
                                    + "&temp_id=" + (Long) jo.get("temp_id"));
                            sw2.addPropertyChangeListener((PropertyChangeEvent ev2) -> {
                                if ("state".equals(ev2.getPropertyName())
                                        && (SwingWorker.StateValue.DONE.equals(ev2.getNewValue()))) {
                                    hideDialog();
                                    try {
                                        Object json2 = new JSONParser().parse(sw2.get());
                                        JSONObject jo2 = (JSONObject) json2;
                                        displayErrorPopup(status, (String) jo2.get("message"));
                                    } catch (ParseException ex) {
                                        Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                                        displayErrorPopup(0, "Unable to contact server");
                                    } catch (InterruptedException | ExecutionException ex) {
                                        Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                                    } finally {
                                        fetchAccountsList();
                                    }
                                }
                            });
                            sw2.execute();
                            showDialog();
                        } else {
                            displayErrorPopup(status, "Transaction Cancelled");
                        }
                    } else {
                        displayErrorPopup(status, (String) jo.get("message"));
                    }
                } catch (ParseException | InterruptedException | ExecutionException ex) {
                    Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    displayErrorPopup(0, "Unable to contact server");
                }
            }
        });
        sw.execute();
        showDialog();
    }//GEN-LAST:event_jWithdrawButtonActionPerformed

    private void jTransferButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTransferButtonActionPerformed
        double amount;
        JTextField TransferAmount = new JTextField();
        JTextField destAccountNumber = new JTextField();
        JComboBox accountNumber = new JComboBox(((Customer) loggedInUser).getAccountsList());
        Object[] message = {
            "Account Number : ", accountNumber,
            "Transfer Amount :", TransferAmount,
            "Destination Account : ", destAccountNumber
        };
        int option = JOptionPane.showConfirmDialog(null, message, "Enter Additional Information", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            try {
                amount = Double.parseDouble(TransferAmount.getText());
            } catch (NumberFormatException e) {
                displayErrorPopup(200, "Invalid Amount !");
                return;
            }
        } else {
            return;
        }
        SendRequest sw = new SendRequest("customer/transact.php", "username=" + loggedInUser.getUserName()
                + "&transaction_type=Transfer"
                + "&account_number=" + (String) accountNumber.getSelectedItem()
                + "&transaction_amt=" + TransferAmount.getText()
                + "&ref=" + destAccountNumber.getText());
        sw.addPropertyChangeListener((PropertyChangeEvent ev) -> {
            if ("state".equals(ev.getPropertyName())
                    && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                hideDialog();
                try {
                    Object json = new JSONParser().parse(sw.get());
                    JSONObject jo = (JSONObject) json;
                    long status = (Long) jo.get("status");
                    if (status == 200) {
                        JTextField OTP = new JTextField();
                        Object[] message2 = {
                            "Enter OTP : ", OTP
                        };
                        int option1 = JOptionPane.showConfirmDialog(null, message2, "Enter Additional Information", JOptionPane.OK_CANCEL_OPTION);
                        if (option1 == JOptionPane.OK_OPTION) {
                            SendRequest sw2 = new SendRequest("customer/transactOTP.php", "username=" + loggedInUser.getUserName()
                                    + "&account_number=" + (String) accountNumber.getSelectedItem()
                                    + "&otp=" + OTP.getText()
                                    + "&temp_id=" + (Long) jo.get("temp_id"));
                            sw2.addPropertyChangeListener((PropertyChangeEvent ev2) -> {
                                if ("state".equals(ev2.getPropertyName())
                                        && (SwingWorker.StateValue.DONE.equals(ev2.getNewValue()))) {
                                    hideDialog();
                                    try {
                                        Object json2 = new JSONParser().parse(sw2.get());
                                        JSONObject jo2 = (JSONObject) json2;
                                        displayErrorPopup(status, (String) jo2.get("message"));
                                    } catch (ParseException ex) {
                                        Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                                        displayErrorPopup(0, "Unable to contact server");
                                    } catch (InterruptedException | ExecutionException ex) {
                                        Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                                    } finally {
                                        fetchAccountsList();
                                    }
                                }
                            });
                            sw2.execute();
                            showDialog();
                        } else {
                            displayErrorPopup(status, "Transaction Cancelled");
                        }
                    } else {
                        displayErrorPopup(status, (String) jo.get("message"));
                    }
                } catch (ParseException | InterruptedException | ExecutionException ex) {
                    Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    displayErrorPopup(0, "Unable to contact server");
                }
            }
        });
        sw.execute();
        showDialog();
    }//GEN-LAST:event_jTransferButtonActionPerformed

    private void jViewTransactionHistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jViewTransactionHistoryButtonActionPerformed
        JComboBox accountNumber = new JComboBox(((Customer) loggedInUser).getAccountsList());
        Object[] message = {
            "Select Account Number : ", accountNumber,};
        int option = JOptionPane.showConfirmDialog(null, message, "Enter Additional Information", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            SendRequest sw = new SendRequest("customer/getTransactionHistory.php", "username=" + loggedInUser.getUserName() + "&account_number=" + (String) accountNumber.getSelectedItem());
            sw.addPropertyChangeListener((PropertyChangeEvent ev) -> {
                if ("state".equals(ev.getPropertyName())
                        && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                    try {
                        hideDialog();
                        Object json = new JSONParser().parse(sw.get());
                        JSONObject jo = (JSONObject) json;
                        long status = (Long) jo.get("status");
                        if (status != (long) 200) {
                            displayErrorPopup(status, (String) jo.get("message"));
                            return;
                        }
                        JSONArray arr = (JSONArray) jo.get("result");
                        DefaultTableModel dtm = (DefaultTableModel) jTransactionsListTable.getModel();
                        dtm.setRowCount(0);
                        Iterator itr = arr.iterator();
                        while (itr.hasNext()) {
                            Map map = (Map) itr.next();
                            dtm.addRow(new Object[]{map.get("ID"), map.get("transaction_amt"), map.get("transaction_type"), map.get("Timestamp"), map.get("balance"), map.get("ref")});
                        }
                        jTransactionsListScrollPane.setPreferredSize(new Dimension(800, 400));
                        JOptionPane.showMessageDialog(null, jTransactionsListScrollPane, "Transaction History", JOptionPane.PLAIN_MESSAGE);
                    } catch (ParseException | InterruptedException | ExecutionException ex) {
                        Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                        displayErrorPopup(0, "Unable to contact server");
                    }
                }
            });
            sw.execute();
            showDialog();
        }
    }//GEN-LAST:event_jViewTransactionHistoryButtonActionPerformed

    private void fetchBranchList() {
        branchList.clear();
        jBranchListComboBox.removeAllItems();
        SendRequest sw = new SendRequest("user/getBranchList.php", "");
        sw.addPropertyChangeListener((PropertyChangeEvent ev) -> {
            if ("state".equals(ev.getPropertyName())
                    && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                hideDialog();
                try {
                    Object json = new JSONParser().parse(sw.get());
                    JSONObject jo = (JSONObject) json;
                    long status = (Long) jo.get("status");
                    if (status != (long) 200) {
                        displayErrorPopup(status, (String) jo.get("message"));
                        return;
                    }
                    JSONArray ja = (JSONArray) jo.get("details");
                    Iterator itr = ja.iterator();
                    while (itr.hasNext()) {
                        Map map = (Map) itr.next();
                        jBranchListComboBox.addItem((String) map.get("Name"));
                        branchList.add(new Branch(map));
                    }
                } catch (ParseException | InterruptedException | ExecutionException ex) {
                    Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    displayErrorPopup(0, "Unable to contact server");
                }
            }
        });
        sw.execute();
        showDialog();
    }
    
    private void jTransactionsListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTransactionsListTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTransactionsListTableMouseClicked

    private void jTransactionsListTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTransactionsListTableKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTransactionsListTableKeyPressed

    private void jBankerAccountsListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBankerAccountsListTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jBankerAccountsListTableMouseClicked

    private void jBankerAccountsListTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBankerAccountsListTableKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBankerAccountsListTableKeyPressed

    private void jRefreshUserAccountListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRefreshUserAccountListButtonActionPerformed
        fetchCustomerAccounts(jSelectedUserLabel.getText());
    }//GEN-LAST:event_jRefreshUserAccountListButtonActionPerformed

    private void jAddNewAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddNewAccountButtonActionPerformed
        if(jSelectedUserLabel.getText().equals("None")){
            displayErrorPopup(200, "Select a user first ! ");
            return;
        }
        JComboBox accountType = new JComboBox(new String[]{"Savings", "Current"});
        JTextField balance = new JTextField();
            Object[] message = {
                "Account Username : ", jSelectedUserLabel.getText(),
                "Banker Username : ", loggedInUser.getUserName(),
                "Select Account Type : ", accountType,
                "Select Starting Balance : ", balance
            };
            int option = JOptionPane.showConfirmDialog(null, message, "Enter Additional Information", JOptionPane.OK_CANCEL_OPTION);
            if (option == JOptionPane.OK_OPTION) {
                SendRequest sw = new SendRequest("banker/newAccount.php","username=" + loggedInUser.getUserName()
                        + "&customer_username=" + jSelectedUserLabel.getText() 
                        + "&account_type=" + (String)accountType.getSelectedItem()
                        + "&balance=" + balance.getText());
                sw.addPropertyChangeListener((PropertyChangeEvent ev) -> {
            if ("state".equals(ev.getPropertyName())
                    && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                try {
                    hideDialog();
                    Object json = new JSONParser().parse(sw.get());
                    JSONObject jo = (JSONObject)json;
                    long status = (Long)jo.get("status");
                    if(status == (long)200) fetchCustomerAccounts(jSelectedUserLabel.getText());
                    displayErrorPopup(status, (String)jo.get("message"));
                } catch (ParseException | InterruptedException | ExecutionException ex) {
                    Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    displayErrorPopup(0, "Unable to contact server");
                }
            }});
                sw.execute();
                showDialog();
            }
    }//GEN-LAST:event_jAddNewAccountButtonActionPerformed

    private void jViewUserTransactionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jViewUserTransactionButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) jBankerAccountsListTable.getModel();
        String[] numdata = new String[model.getRowCount()];
        for (int count = 0; count < model.getRowCount(); count++) {
            numdata[count] = model.getValueAt(count, 0).toString();
        }
        JComboBox accountNumber = new JComboBox(numdata);
        Object[] message = {
            "Select Account Number : ", accountNumber,};
        int option = JOptionPane.showConfirmDialog(null, message, "Enter Additional Information", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            SendRequest sw = new SendRequest("banker/getTransactionHistory.php", "username=" + loggedInUser.getUserName() + "&account_number=" + (String) accountNumber.getSelectedItem());
            sw.addPropertyChangeListener((PropertyChangeEvent ev) -> {
                if ("state".equals(ev.getPropertyName())
                        && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                    hideDialog();
                    try {
                        Object json = new JSONParser().parse(sw.get());
                        JSONObject jo = (JSONObject) json;
                        long status = (Long) jo.get("status");
                        if (status != (long) 200) {
                            displayErrorPopup(status, (String) jo.get("message"));
                            return;
                        }
                        JSONArray arr = (JSONArray) jo.get("result");
                        DefaultTableModel dtm = (DefaultTableModel) jTransactionsListTable.getModel();
                        dtm.setRowCount(0);
                        Iterator itr = arr.iterator();
                        while (itr.hasNext()) {
                            Map map = (Map) itr.next();
                            dtm.addRow(new Object[]{map.get("ID"), map.get("transaction_amt"), map.get("transaction_type"), map.get("Timestamp"), map.get("balance"), map.get("ref")});
                        }
                        //Object[] data = {jTransactionsListScrollPane};
                        jTransactionsListScrollPane.setPreferredSize(new Dimension(800, 400));
                        JOptionPane.showMessageDialog(null, jTransactionsListScrollPane, "Transaction History", JOptionPane.PLAIN_MESSAGE);
                    } catch (ParseException | InterruptedException | ExecutionException ex) {
                        Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                        displayErrorPopup(0, "Unable to contact server");
                    }
                }
            });
            sw.execute();
            showDialog();
        }
    }//GEN-LAST:event_jViewUserTransactionButtonActionPerformed

    private void jChangeSelectedUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChangeSelectedUserButtonActionPerformed
        JTextField username = new JTextField();
        Object[] message = {
            "Search User : ", username
        };
        int option = JOptionPane.showConfirmDialog(null, message, "Enter Additional Information", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            fetchCustomerAccounts(username.getText());
        }
    }//GEN-LAST:event_jChangeSelectedUserButtonActionPerformed

    private void fetchCustomerAccounts(String username) {
        SendRequest sw = new SendRequest("banker/getAccountsList.php", "username=" + loggedInUser.getUserName() + "&custUsername=" + username);
        sw.addPropertyChangeListener((PropertyChangeEvent ev) -> {
            if ("state".equals(ev.getPropertyName())
                    && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                hideDialog();
                try {
                    Object json = new JSONParser().parse(sw.get());
                    JSONObject jo = (JSONObject) json;
                    long status = (Long) jo.get("status");
                    if (status != (long) 200) {
                        displayErrorPopup(status, (String) jo.get("message"));
                    } else {
                        DefaultTableModel dtm = (DefaultTableModel) jBankerAccountsListTable.getModel();
                        dtm.setRowCount(0);
                        JSONArray ja = (JSONArray) jo.get("result");
                        Iterator itr1 = ja.iterator();
                        while (itr1.hasNext()) {
                            new Account((Map) itr1.next()).display(dtm);
                        }
                        jSelectedUserLabel.setText(username);
                    }
                } catch (ParseException | InterruptedException | ExecutionException ex) {
                    Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    displayErrorPopup(0, "Unable to contact server");
                }
            }
        });
        sw.execute();
        showDialog();
    }
    private void jSubmitNewCustomerFormButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSubmitNewCustomerFormButtonActionPerformed
        SendRequest sw = new SendRequest("banker/newCustomer.php", "username=" + loggedInUser.getUserName()
                + "&fname=" + jFirstNameTextField.getText()
                + "&lname=" + jlastNameTextField.getText()
                + "&phone_number=" + jPhoneTextField.getText()
                + "&email=" + jEmailTextField.getText()
                + "&customer_username=" + jCustomerUserNameTextField.getText()
                + "&password=" + jNewPasswordField.getText()
                + "&dob=" + jDOBTextField.getText()
                + "&branch=" + branchList.get(jBranchListComboBox.getSelectedIndex()).getID()
                + "&addressLine1=" + jCustomerAddressLine1TextField.getText()
                + "&addressLine2=" + jCustomerAddressLine2TextField.getText()
                + "&city=" + jCustomerCityTextField.getText()
                + "&state=" + jCustomerStateTextField.getText()
                + "&pinCode=" + jPinCodeTextField.getText());
        sw.addPropertyChangeListener((PropertyChangeEvent ev) -> {
            if ("state".equals(ev.getPropertyName())
                    && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                hideDialog();
                try {
                    Object json = new JSONParser().parse(sw.get());
                    JSONObject jo = (JSONObject) json;
                    long status = (Long) jo.get("status");
                    displayErrorPopup(status, (String) jo.get("message"));
                    resetTextFields();
                } catch (ParseException | InterruptedException | ExecutionException ex) {
                    Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    displayErrorPopup(0, "Unable to contact server");
                }
            }
        });
        sw.execute();
        showDialog();
    }//GEN-LAST:event_jSubmitNewCustomerFormButtonActionPerformed

    
    private void jCustomerAddressLine1TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCustomerAddressLine1TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCustomerAddressLine1TextFieldActionPerformed

    private void jSubmitNewCustomerFormButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSubmitNewCustomerFormButton2ActionPerformed
        SendRequest sw = new SendRequest("banker/updateUserDetails.php", "username=" + loggedInUser.getUserName()
                + "&fname=" + jFirstNameTextField1.getText()
                + "&lname=" + jlastNameTextField1.getText()
                + "&phone_number=" + jPhoneTextField1.getText()
                + "&email=" + jEmailTextField1.getText()
                + "&customer_username=" + jCustomerUserNameTextField1.getText()
                + "&dob=" + jDOBTextField1.getText()
                + "&addressLine1=" + jCustomerAddressLine1TextField1.getText()
                + "&addressLine2=" + jCustomerAddressLine2TextField1.getText()
                + "&city=" + jCustomerCityTextField1.getText()
                + "&state=" + jCustomerStateTextField1.getText()
                + "&pinCode=" + jPinCodeTextField1.getText());
        sw.addPropertyChangeListener((PropertyChangeEvent ev) -> {
            if ("state".equals(ev.getPropertyName())
                    && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                hideDialog();
                try {
                    Object json = new JSONParser().parse(sw.get());
                    JSONObject jo = (JSONObject) json;
                    long status = (Long) jo.get("status");
                    displayErrorPopup(status, (String) jo.get("message"));
                    resetTextFields();
                } catch (ParseException | InterruptedException | ExecutionException ex) {
                    Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    displayErrorPopup(0, "Unable to contact server");
                }
            }
        });
        sw.execute();
        showDialog();
    }//GEN-LAST:event_jSubmitNewCustomerFormButton2ActionPerformed

    private void jFetchUserFormButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFetchUserFormButtonActionPerformed
        JTextField username = new JTextField();
        Object[] message = {
            "Search User : ", username
        };
        int option = JOptionPane.showConfirmDialog(null, message, "Enter Additional Information", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            SendRequest sw = new SendRequest("banker/getUserDetails.php", "username=" + loggedInUser.getUserName()
                    + "&cust_username=" + username.getText());
            sw.addPropertyChangeListener((PropertyChangeEvent ev) -> {
                if ("state".equals(ev.getPropertyName())
                        && (SwingWorker.StateValue.DONE.equals(ev.getNewValue()))) {
                    hideDialog();
                    try {
                        Object json = new JSONParser().parse(sw.get());
                        JSONObject jo = (JSONObject) json;
                        long status = (Long) jo.get("status");
                        if (status != (long) 200) {
                            displayErrorPopup(status, (String) jo.get("message"));
                            return;
                        }
                        Map map = (Map) jo.get("user_details");
                        jFirstNameTextField1.setText((String) map.get("first_name"));
                        jlastNameTextField1.setText((String) map.get("last_name"));
                        jPhoneTextField1.setText((String) map.get("phone_number"));
                        jEmailTextField1.setText((String) map.get("email_address"));
                        jDOBTextField1.setText((String) map.get("dob"));
                        jCustomerUserNameTextField1.setText(username.getText());
                        map = (Map) jo.get("address_details");
                        jCustomerAddressLine1TextField1.setText((String) map.get("Line1"));
                        jCustomerAddressLine2TextField1.setText((String) map.get("Line2"));
                        jCustomerCityTextField1.setText((String) map.get("City"));
                        jCustomerStateTextField1.setText((String) map.get("State"));
                        jPinCodeTextField1.setText((String) map.get("PinCode"));
                    } catch (ParseException | InterruptedException | ExecutionException ex) {
                        Logger.getLogger(MainBankJFrame.class.getName()).log(Level.SEVERE, null, ex);
                        displayErrorPopup(0, "Unable to contact server");
                    }
                }
            });
            sw.execute();
            showDialog();
        }
    }//GEN-LAST:event_jFetchUserFormButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainBankJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainBankJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jAccountsListScrollPane1;
    private javax.swing.JScrollPane jAccountsListScrollPane2;
    private javax.swing.JTable jAccountsListTable;
    private javax.swing.JButton jAddNewAccountButton;
    private javax.swing.JPanel jAddNewCustomerPanel;
    private javax.swing.JTable jBankerAccountsListTable;
    private javax.swing.JTextField jBankerEmailTextField;
    private javax.swing.JTextField jBankerNameTextField;
    private javax.swing.JTextField jBankerPhoneTextField;
    private javax.swing.JPanel jBankerViewAccountsPanel;
    private javax.swing.JTextArea jBranchDetailsTextArea;
    private javax.swing.JComboBox<String> jBranchListComboBox;
    private javax.swing.JButton jChangeSelectedUserButton;
    private javax.swing.JTextField jCustomerAddressLine1TextField;
    private javax.swing.JTextField jCustomerAddressLine1TextField1;
    private javax.swing.JTextField jCustomerAddressLine2TextField;
    private javax.swing.JTextField jCustomerAddressLine2TextField1;
    private javax.swing.JTextField jCustomerCityTextField;
    private javax.swing.JTextField jCustomerCityTextField1;
    private javax.swing.JTextField jCustomerDOBTextField;
    private javax.swing.JButton jCustomerDetailsButton;
    private javax.swing.JPanel jCustomerDetailsPanel;
    private javax.swing.JTextField jCustomerEmailTextField;
    private javax.swing.JTextField jCustomerNameTextField;
    private javax.swing.JTextField jCustomerPhoneTextField;
    private javax.swing.JTextField jCustomerStateTextField;
    private javax.swing.JTextField jCustomerStateTextField1;
    private javax.swing.JTextField jCustomerUserNameTextField;
    private javax.swing.JTextField jCustomerUserNameTextField1;
    private javax.swing.JTextField jDOBTextField;
    private javax.swing.JTextField jDOBTextField1;
    private javax.swing.JButton jDepositButton;
    private javax.swing.JTextField jEmailTextField;
    private javax.swing.JTextField jEmailTextField1;
    private javax.swing.JButton jFetchUserFormButton;
    private javax.swing.JTextField jFirstNameTextField;
    private javax.swing.JTextField jFirstNameTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jLoginButton;
    private javax.swing.JPanel jLoginPanel;
    private javax.swing.JPanel jLogoutPanel;
    private javax.swing.JPanel jMainPanel;
    private javax.swing.JTabbedPane jMainTabbedPane;
    private javax.swing.JLabel jNameLabel;
    private javax.swing.JTextField jNameTextField;
    private javax.swing.JPasswordField jNewPasswordField;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JLabel jPasswordLabel;
    private javax.swing.JButton jPerformTransactionButton;
    private javax.swing.JTextField jPhoneTextField;
    private javax.swing.JTextField jPhoneTextField1;
    private javax.swing.JTextField jPinCodeTextField;
    private javax.swing.JTextField jPinCodeTextField1;
    private javax.swing.JButton jRefreshAccountListButton;
    private javax.swing.JButton jRefreshUserAccountListButton;
    private javax.swing.JTextArea jRegisteredAddressTextArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jSelectedUserLabel;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jSubmitNewCustomerFormButton;
    private javax.swing.JButton jSubmitNewCustomerFormButton2;
    private javax.swing.JPanel jTransactPanel;
    private javax.swing.JScrollPane jTransactionsListScrollPane;
    private javax.swing.JTable jTransactionsListTable;
    private javax.swing.JButton jTransferButton;
    private javax.swing.JPanel jViewAccountsPanel;
    private javax.swing.JPanel jViewEditCustomerPanel;
    private javax.swing.JButton jViewTransactionHistoryButton;
    private javax.swing.JButton jViewUserTransactionButton;
    private javax.swing.JButton jWithdrawButton;
    private javax.swing.JTextField jlastNameTextField;
    private javax.swing.JTextField jlastNameTextField1;
    // End of variables declaration//GEN-END:variables

}
